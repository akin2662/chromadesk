name: Build and Release AppImage

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v0.1.0, v1.0.0 etc.

permissions:
  contents: write # Required to create releases and upload assets

jobs:
  build-release:
    name: Build and Release ChromaDesk AppImage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Specify your project's Python version if different

      - name: Install System Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            patchelf \
            desktop-file-utils \
            libfuse2 \
            fakeroot \
            appimagetool

      - name: Install Python Build Dependencies & Project
        run: |
          python -m pip install --upgrade pip
          # Install build tools and project dependencies
          pip install build setuptools wheel python-pyproject-metadata
          pip install . # Installs dependencies from pyproject.toml

      - name: Build AppImage using build.sh
        run: |
          chmod +x ./build.sh
          ./build.sh --appimage

      - name: Determine AppImage Filename
        id: get_appimage_filename
        run: |
          VERSION="${{ github.ref_name }}" # Get tag like v0.2.0
          VERSION="${VERSION#v}" # Remove leading 'v' -> 0.2.0
          FILENAME="chromadesk-${VERSION}-x86_64.AppImage"
          echo "filename=${FILENAME}" >> $GITHUB_OUTPUT
          echo "Checking for file: ${FILENAME}"
          if [[ ! -f "${FILENAME}" ]]; then
            echo "ERROR: Expected AppImage file ${FILENAME} not found!"
            ls -l *.AppImage # List found AppImages for debugging
            exit 1
          fi

      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.get_appimage_filename.outputs.filename }}
          tag_name: ${{ github.ref_name }} # Use the tag that triggered workflow
          name: Release ${{ github.ref_name }}
          body: "Automated AppImage release for ChromaDesk ${{ github.ref_name }}"
          draft: false
          prerelease: false # Set to true if these are pre-releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub Actions 